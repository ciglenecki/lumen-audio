{"openapi": "3.0.2", "info": {"title": "FastAPI", "description": "\n# Before consuming the endpoints set the variable `MODEL_DIRECTORY` in `.env` to a directory that contains model checkpoints (.ckpt). Models outside of this directory can't be used for inference via endpoints.\n\nCommand for running the server:\n### `(venv) username@pc:~/lumen-geoguesser$ python3 src/app/main.py`\n\n", "version": "0.1.0"}, "paths": {"/models": {"get": {"tags": ["available models"], "summary": "Get Models", "description": "Returns names of all available models on the server. You must use model names for all `POST` request predictions. Model name is a stem of the model checkpoint, e.g. model with filename `my_model.ckpt` has the name `my_model`. Models are fetched from the directory `MODEL_DIRECTORY` which is defined in the `.env` file. Only models with the extension `MODEL_EXTENSION` are fetched. Model names will be returned instead of the model filenames.", "operationId": "get_models_models_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"title": "Response Get Models Models Get", "type": "array", "items": {"type": "string"}}}}}}}}, "/model/predict-directory": {"post": {"tags": ["predict"], "summary": "Predict Sound", "description": "Infers latitude and longitude for multiple images. If you have a group of images where each image represents one cardinal direction (north, east, south, and west) (\"0.jpg\", ... , \"270.jpg\") you should use the `/model/{model_name}/predict-cardinal-images endpoint", "operationId": "predict_sound_model_predict_directory_post", "parameters": [{"required": true, "schema": {"title": "Model Path", "type": "string"}, "name": "model_path", "in": "query"}], "requestBody": {"content": {"multipart/form-data": {"schema": {"$ref": "#/components/schemas/Body_predict_sound_model_predict_directory_post"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"title": "Response Predict Sound Model Predict Directory Post", "type": "array", "items": {"$ref": "#/components/schemas/MultilabelPrediction"}}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"Body_predict_sound_model_predict_directory_post": {"title": "Body_predict_sound_model_predict_directory_post", "required": ["directory"], "type": "object", "properties": {"directory": {"title": "Directory", "type": "array", "items": {"type": "string", "format": "binary"}}}}, "HTTPValidationError": {"title": "HTTPValidationError", "type": "object", "properties": {"detail": {"title": "Detail", "type": "array", "items": {"$ref": "#/components/schemas/ValidationError"}}}}, "MultilabelPrediction": {"title": "MultilabelPrediction", "type": "object", "properties": {}}, "ValidationError": {"title": "ValidationError", "required": ["loc", "msg", "type"], "type": "object", "properties": {"loc": {"title": "Location", "type": "array", "items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}}}}, "tags": [{"name": "available models", "description": "All available models from the `MODEL_DIRECTORY` directory defined in the `.env` file"}, {"name": "predict", "description": "Endpoints used for predicting latitude and longitudes for given data.\nCurl example for multiple images:\n\n```\ncurl -i \\\n-F \"images=@data/raw/images/train/e788b3d1-9d20-466c-9dee-97982f0f9a3b/0.jpg\" \\\n-F \"images=@data/raw/images/train/e788b3d1-9d20-466c-9dee-97982f0f9a3b/0.jpg\" \\\nhttp://0.0.0.0:8090/model/Golf_76__haversine_0.0098__val_acc_0.47__val_loss_1.98__05-04-03-36-32/predict-images\n```\n"}]}
